#include <iostream>
#include <vector>
#include <string>

using namespace std;
struct Task {
    string description;
    bool completed;
};

vector<Task> tasks;

void addTask() {
    Task task;
    cout << "Enter task description: ";
    cin.ignore(); 
    getline(cin, task.description);
    task.completed = false;
    tasks.push_back(task);
    cout << "Task added successfully!" << endl;
}

void viewTasks() {
    if (tasks.empty()) {
        cout << "No tasks to display." << endl;
    } else {
        cout << "Tasks:" << endl;
        for (size_t i = 0; i < tasks.size(); i++) {
            cout << i + 1 << ". ";
            cout << (tasks[i].completed ? "[x] " : "[ ] ");
            cout << tasks[i].description << endl;
        }
    }
}

void markCompleted() {
    viewTasks();
    cout << "Enter the task number to mark as completed (0 to cancel): ";
    int taskNumber;
    cin >> taskNumber;
    
    if (taskNumber < 1 || taskNumber > tasks.size()) {
        cout << "Invalid task number." << endl;
    } else {
        tasks[taskNumber - 1].completed = true;
        cout << "Task marked as completed." << endl;
    }
}

void removeTask() {
    viewTasks();
    cout << "Enter the task number to remove (0 to cancel): ";
    int taskNumber;
    cin >> taskNumber;
    
    if (taskNumber < 1 || taskNumber > tasks.size()) {
        cout << "Invalid task number." << endl;
    } else {
        tasks.erase(tasks.begin() + taskNumber - 1);
        cout << "Task removed." << endl;
    }
}

int main() {
    int choice;

    while (true) {
        cout << "\nTask Manager Menu:" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View Tasks" << endl;
        cout << "3. Mark Task as Completed" << endl;
        cout << "4. Remove Task" << endl;
        cout << "5. Quit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addTask();
                break;
            case 2:
                viewTasks();
                break;
            case 3:
                markCompleted();
                break;
            case 4:
                removeTask();
                break;
            case 5:
                cout << "bye" << endl;
                return 0;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
